// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_core;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;

import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_core.*;


@Namespace("cv") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.opencv.presets.opencv_core.class)
public class MatStep extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public MatStep(Pointer p) { super(p); }

    public MatStep() { super((Pointer)null); allocate(); }
    @NoException private native void allocate();
    public MatStep(@Cast("size_t") long s) { super((Pointer)null); allocate(s); }
    @NoException private native void allocate(@Cast("size_t") long s);
    public native @Cast("size_t*") @ByRef @Name("operator []") @NoException SizeTPointer get(int i);
    public native @Cast("size_t") @Name("operator size_t") long asLong();
    public native @ByRef @Name("operator =") MatStep put(@Cast("size_t") long s);

    public native @Cast("size_t*") SizeTPointer p(); public native MatStep p(SizeTPointer setter);
    public native @Cast("size_t") long buf(int i); public native MatStep buf(int i, long setter);
    @MemberGetter public native @Cast("size_t*") SizeTPointer buf();
}
