// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.qt.Qt5Core;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.qt.global.Qt5Core.*;


@NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.qt.presets.Qt5Core.class)
public class QMessageLogContext extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public QMessageLogContext(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public QMessageLogContext(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public QMessageLogContext position(long position) {
        return (QMessageLogContext)super.position(position);
    }
    @Override public QMessageLogContext getPointer(long i) {
        return new QMessageLogContext((Pointer)this).offsetAddress(i);
    }

     public QMessageLogContext() { super((Pointer)null); allocate(); }
@NoException(true) private native void allocate();
     public QMessageLogContext(@Cast("const char*") BytePointer fileName, int lineNumber, @Cast("const char*") BytePointer functionName, @Cast("const char*") BytePointer categoryName) { super((Pointer)null); allocate(fileName, lineNumber, functionName, categoryName); }
@NoException(true) private native void allocate(@Cast("const char*") BytePointer fileName, int lineNumber, @Cast("const char*") BytePointer functionName, @Cast("const char*") BytePointer categoryName);
public QMessageLogContext(String fileName, int lineNumber, String functionName, String categoryName) { super((Pointer)null); allocate(fileName, lineNumber, functionName, categoryName); }
@NoException(true) private native void allocate(String fileName, int lineNumber, String functionName, String categoryName);

    public native int version(); public native QMessageLogContext version(int setter);
    public native int line(); public native QMessageLogContext line(int setter);
    public native @Cast("const char*") BytePointer file(); public native QMessageLogContext file(BytePointer setter);
    public native @Cast("const char*") BytePointer function(); public native QMessageLogContext function(BytePointer setter);
    public native @Cast("const char*") BytePointer category(); public native QMessageLogContext category(BytePointer setter);
}
