// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.onnxruntime;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.opencl.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencl.global.OpenCL.*;
import com.oracle.svm.shadowed.org.bytedeco.dnnl.*;
import static com.oracle.svm.shadowed.org.bytedeco.dnnl.global.dnnl.*;

import static com.oracle.svm.shadowed.org.bytedeco.onnxruntime.global.onnxruntime.*;


/** \brief Custom Op Domain
*
*/
@Namespace("Ort") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class CustomOpDomain extends BaseCustomOpDomain {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CustomOpDomain(Pointer p) { super(p); }


  /** \brief Wraps OrtApi::CreateCustomOpDomain */
  public CustomOpDomain(@Cast("const char*") BytePointer domain) { super((Pointer)null); allocate(domain); }
  private native void allocate(@Cast("const char*") BytePointer domain);
  public CustomOpDomain(String domain) { super((Pointer)null); allocate(domain); }
  private native void allocate(String domain);

  /** Wraps CustomOpDomain_Add */
  public native void Add(OrtCustomOp op);
}
