// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.cuda.cufftw;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.cuda.cudart.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cudart.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cufft.*;

import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cufftw.*;


@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.cuda.presets.cufftw.class)
public class fftw_iodim extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public fftw_iodim() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public fftw_iodim(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public fftw_iodim(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public fftw_iodim position(long position) {
        return (fftw_iodim)super.position(position);
    }
    @Override public fftw_iodim getPointer(long i) {
        return new fftw_iodim((Pointer)this).offsetAddress(i);
    }

    public native int n(); public native fftw_iodim n(int setter);
    public native int is(); public native fftw_iodim is(int setter);
    public native int os(); public native fftw_iodim os(int setter);
}
