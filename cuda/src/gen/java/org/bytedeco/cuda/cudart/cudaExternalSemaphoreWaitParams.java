// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.cuda.cudart;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cudart.*;


/**
* External semaphore wait parameters
*/
@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.cuda.presets.cudart.class)
public class cudaExternalSemaphoreWaitParams extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public cudaExternalSemaphoreWaitParams() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public cudaExternalSemaphoreWaitParams(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public cudaExternalSemaphoreWaitParams(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public cudaExternalSemaphoreWaitParams position(long position) {
        return (cudaExternalSemaphoreWaitParams)super.position(position);
    }

        /**
        * Parameters for fence objects
        */
            /**
            * Value of fence to be waited on
            */
            @Name("params.fence.value") public native @Cast("unsigned long long") long params_fence_value(); public native cudaExternalSemaphoreWaitParams params_fence_value(long setter);
    /**
    * Flags reserved for the future. Must be zero.
    */
    public native @Cast("unsigned int") int flags(); public native cudaExternalSemaphoreWaitParams flags(int setter);
}
