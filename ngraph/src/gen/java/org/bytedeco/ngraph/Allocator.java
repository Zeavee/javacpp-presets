// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.ngraph;

import com.oracle.svm.shadowed.org.bytedeco.ngraph.Allocator;
import com.oracle.svm.shadowed.org.bytedeco.ngraph.Function;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.ngraph.global.ngraph.*;


/** \brief Abstract class for the allocator */
@Name("ngraph::runtime::Allocator") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.ngraph.presets.ngraph.class)
public class Allocator extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public Allocator(Pointer p) { super(p); }

    /** \brief allocates memory with the given size and alignment requirement
     *  @param size exact size of bytes to allocate
     *  @param alignment specifies the alignment. Must be a valid alignment supported by the
     *                   implementation. */
    public native Pointer malloc(@Cast("size_t") long size, @Cast("size_t") long alignment);

    /** \brief deallocates the memory pointed by ptr
     *  @param ptr pointer to the aligned memory to be released */
    public native @Name("free") void _free(Pointer ptr);
}
