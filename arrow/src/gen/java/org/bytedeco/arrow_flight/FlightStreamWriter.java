// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.arrow_flight;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.arrow.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow.*;

import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow_flight.*;

// #endif

/** \brief A RecordBatchWriter that also allows sending
 *  application-defined metadata via the Flight protocol. */
@Namespace("arrow::flight") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.arrow.presets.arrow_flight.class)
public class FlightStreamWriter extends MetadataRecordBatchWriter {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FlightStreamWriter(Pointer p) { super(p); }

  /** \brief Indicate that the application is done writing to this stream.
   * 
   *  The application may not write to this stream after calling
   *  this. This differs from closing the stream because this writer
   *  may represent only one half of a readable and writable stream. */
  public native @ByVal Status DoneWriting();
}
