// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.arrow_flight;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.arrow.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow.*;

import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow_flight.*;


/** \brief A TLS certificate plus key. */
@Namespace("arrow::flight") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.arrow.presets.arrow_flight.class)
public class CertKeyPair extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CertKeyPair() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CertKeyPair(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CertKeyPair(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CertKeyPair position(long position) {
        return (CertKeyPair)super.position(position);
    }
    @Override public CertKeyPair getPointer(long i) {
        return new CertKeyPair((Pointer)this).offsetAddress(i);
    }

  /** \brief The certificate in PEM format. */
  public native @StdString String pem_cert(); public native CertKeyPair pem_cert(String setter);

  /** \brief The key in PEM format. */
  public native @StdString String pem_key(); public native CertKeyPair pem_key(String setter);
}
