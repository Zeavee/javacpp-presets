// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.arrow_flight;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.arrow.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow.*;

import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow_flight.*;


/** \brief An authentication mechanism that does nothing. */
@Namespace("arrow::flight") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.arrow.presets.arrow_flight.class)
public class NoOpAuthHandler extends ServerAuthHandler {
    static { Loader.load(); }
    /** Default native constructor. */
    public NoOpAuthHandler() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public NoOpAuthHandler(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public NoOpAuthHandler(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public NoOpAuthHandler position(long position) {
        return (NoOpAuthHandler)super.position(position);
    }
    @Override public NoOpAuthHandler getPointer(long i) {
        return new NoOpAuthHandler((Pointer)this).offsetAddress(i);
    }

  public native @ByVal Status Authenticate(ServerAuthSender outgoing, ServerAuthReader incoming);
  public native @ByVal Status IsValid(@StdString String token, @StdString @Cast({"char*", "std::string*"}) BytePointer peer_identity);
  public native @ByVal Status IsValid(@StdString BytePointer token, @StdString @Cast({"char*", "std::string*"}) BytePointer peer_identity);
}
