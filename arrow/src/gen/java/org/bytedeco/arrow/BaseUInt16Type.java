// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.arrow;

import com.oracle.svm.shadowed.org.bytedeco.arrow.Function;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow.*;


@Name("arrow::NumericScalar<arrow::UInt16Type>") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.arrow.presets.arrow.class)
public class BaseUInt16Type extends PrimitiveScalarBase {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public BaseUInt16Type(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public BaseUInt16Type(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public BaseUInt16Type position(long position) {
        return (BaseUInt16Type)super.position(position);
    }
    @Override public BaseUInt16Type getPointer(long i) {
        return new BaseUInt16Type((Pointer)this).offsetAddress(i);
    }


  public BaseUInt16Type(@Cast("arrow::NumericScalar<arrow::UInt16Type>::ValueType") short value) { super((Pointer)null); allocate(value); }
  private native void allocate(@Cast("arrow::NumericScalar<arrow::UInt16Type>::ValueType") short value);

  public BaseUInt16Type() { super((Pointer)null); allocate(); }
  private native void allocate();
}
