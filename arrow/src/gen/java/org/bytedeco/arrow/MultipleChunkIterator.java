// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.arrow;

import com.oracle.svm.shadowed.org.bytedeco.arrow.Function;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow.*;


/** \brief EXPERIMENTAL: Utility for incremental iteration over contiguous
 *  pieces of potentially differently-chunked ChunkedArray objects */
@Namespace("arrow::internal") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.arrow.presets.arrow.class)
public class MultipleChunkIterator extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public MultipleChunkIterator(Pointer p) { super(p); }

  public MultipleChunkIterator(@Const @ByRef ChunkedArray left, @Const @ByRef ChunkedArray right) { super((Pointer)null); allocate(left, right); }
  private native void allocate(@Const @ByRef ChunkedArray left, @Const @ByRef ChunkedArray right);

  public native @Cast("bool") boolean Next(@SharedPtr Array next_left, @SharedPtr Array next_right);

  public native @Cast("int64_t") @Name("position") long _position();
}
