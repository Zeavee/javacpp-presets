// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.parquet;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.arrow.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow.*;

import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.parquet.*;


@Namespace("parquet::schema") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.arrow.presets.parquet.class)
public class ColumnPath extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ColumnPath(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ColumnPath(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public ColumnPath position(long position) {
        return (ColumnPath)super.position(position);
    }
    @Override public ColumnPath getPointer(long i) {
        return new ColumnPath((Pointer)this).offsetAddress(i);
    }

  public ColumnPath() { super((Pointer)null); allocate(); }
  private native void allocate();
  public ColumnPath(@Const @ByRef StringVector path) { super((Pointer)null); allocate(path); }
  private native void allocate(@Const @ByRef StringVector path);

  public static native @SharedPtr ColumnPath FromDotString(@StdString String dotstring);
  public static native @SharedPtr ColumnPath FromDotString(@StdString BytePointer dotstring);
  public static native @SharedPtr ColumnPath FromNode(@Const @ByRef Node node);

  public native @SharedPtr ColumnPath extend(@StdString String node_name);
  public native @SharedPtr ColumnPath extend(@StdString BytePointer node_name);
  public native @StdString String ToDotString();
  public native @Const @ByRef StringVector ToDotVector();
}
