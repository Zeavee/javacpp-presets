// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.arrow_dataset;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.arrow.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow.*;
import com.oracle.svm.shadowed.org.bytedeco.parquet.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.parquet.*;

import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow_dataset.*;


/** \brief A writer for this format. */
@Namespace("arrow::dataset") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.arrow.presets.arrow_dataset.class)
public class FileWriter extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FileWriter(Pointer p) { super(p); }


  /** \brief Write the given batch. */
  public native @ByVal Status Write(@SharedPtr @Cast({"", "std::shared_ptr<arrow::RecordBatch>"}) RecordBatch batch);

  /** \brief Write all batches from the reader. */
  public native @ByVal Status Write(RecordBatchReader batches);

  /** \brief Indicate that writing is done. */
  public native @ByVal Status Finish();

  public native @SharedPtr FileFormat format();
  public native @Const @SharedPtr @ByRef Schema schema();
  public native @SharedPtr FileWriteOptions options();
  public native @Const @ByRef FileLocator destination();
}
