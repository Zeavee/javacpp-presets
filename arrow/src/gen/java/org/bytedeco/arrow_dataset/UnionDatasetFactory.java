// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.arrow_dataset;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.arrow.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow.*;
import com.oracle.svm.shadowed.org.bytedeco.parquet.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.parquet.*;

import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow_dataset.*;


/** \}
 <p>
 *  \brief DatasetFactory provides a way to inspect/discover a Dataset's
 *  expected schema before materialization.
 *  \ingroup dataset-implementations */
@Namespace("arrow::dataset") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.arrow.presets.arrow_dataset.class)
public class UnionDatasetFactory extends DatasetFactory {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public UnionDatasetFactory(Pointer p) { super(p); }

  public static native @ByVal DatasetFactoryResult Make(
        @SharedPtr @StdVector DatasetFactory factories);

  /** \brief Return the list of child DatasetFactory */
  
  ///
  public native @SharedPtr @StdVector DatasetFactory factories();

  /** \brief Get the schemas of the Datasets.
   * 
   *  Instead of applying options globally, it applies at each child factory.
   *  This will not respect {@code options.fragments} exactly, but will respect the
   *  spirit of peeking the first fragments or all of them. */
  public native @ByVal SchemaVectorResult InspectSchemas(
        @ByVal InspectOptions options);

  /** \brief Create a Dataset. */
  public native @ByVal DatasetResult Finish(@ByVal FinishOptions options);
}
