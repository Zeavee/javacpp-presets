// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.arrow_dataset;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.arrow.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow.*;
import com.oracle.svm.shadowed.org.bytedeco.parquet.*;
import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.parquet.*;

import static com.oracle.svm.shadowed.org.bytedeco.arrow.global.arrow_dataset.*;


@Namespace("arrow::dataset") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.arrow.presets.arrow_dataset.class)
public class CsvFileWriteOptions extends FileWriteOptions {
    static { Loader.load(); }
    /** Default native constructor. */
    public CsvFileWriteOptions() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CsvFileWriteOptions(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CsvFileWriteOptions(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CsvFileWriteOptions position(long position) {
        return (CsvFileWriteOptions)super.position(position);
    }
    @Override public CsvFileWriteOptions getPointer(long i) {
        return new CsvFileWriteOptions((Pointer)this).offsetAddress(i);
    }

  /** Options passed to csv::MakeCSVWriter. */
  public native @SharedPtr WriteOptions write_options(); public native CsvFileWriteOptions write_options(WriteOptions setter);
}
