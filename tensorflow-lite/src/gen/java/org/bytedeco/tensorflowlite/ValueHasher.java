// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tensorflowlite;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.tensorflowlite.global.tensorflowlite.*;


// Some versions of gcc don't support partial specialization in class scope,
// so these are defined in a namescope.

@Name("tflite::op_resolver_hasher::ValueHasher<tflite::BuiltinOperator>") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tensorflowlite.presets.tensorflowlite.class)
public class ValueHasher extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ValueHasher() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ValueHasher(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ValueHasher(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ValueHasher position(long position) {
        return (ValueHasher)super.position(position);
    }
    @Override public ValueHasher getPointer(long i) {
        return new ValueHasher((Pointer)this).offsetAddress(i);
    }

  public native @Cast("size_t") @Name("operator ()") long apply(@Cast("const tflite::BuiltinOperator") int v);
}
