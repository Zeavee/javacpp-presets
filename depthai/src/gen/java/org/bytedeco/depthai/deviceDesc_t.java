// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.depthai;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_core.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_core.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_imgproc.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_imgproc.*;

import static com.oracle.svm.shadowed.org.bytedeco.depthai.global.depthai.*;


@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.depthai.presets.depthai.class)
public class deviceDesc_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public deviceDesc_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public deviceDesc_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public deviceDesc_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public deviceDesc_t position(long position) {
        return (deviceDesc_t)super.position(position);
    }
    @Override public deviceDesc_t getPointer(long i) {
        return new deviceDesc_t((Pointer)this).offsetAddress(i);
    }

    public native @Cast("XLinkProtocol_t") int protocol(); public native deviceDesc_t protocol(int setter);
    public native @Cast("XLinkPlatform_t") int platform(); public native deviceDesc_t platform(int setter);
    public native @Cast("char") byte name(int i); public native deviceDesc_t name(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer name();
}
