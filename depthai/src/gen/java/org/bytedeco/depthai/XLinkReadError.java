// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.depthai;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_core.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_core.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_imgproc.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_imgproc.*;

import static com.oracle.svm.shadowed.org.bytedeco.depthai.global.depthai.*;

@Namespace("dai") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.depthai.presets.depthai.class)
public class XLinkReadError extends XLinkError {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public XLinkReadError(Pointer p) { super(p); }

    public XLinkReadError(@Cast("XLinkError_t") int status, @StdString BytePointer stream) { super((Pointer)null); allocate(status, stream); }
    private native void allocate(@Cast("XLinkError_t") int status, @StdString BytePointer stream);
    public XLinkReadError(@Cast("XLinkError_t") int status, @StdString ByteBuffer stream) { super((Pointer)null); allocate(status, stream); }
    private native void allocate(@Cast("XLinkError_t") int status, @StdString ByteBuffer stream);
    public XLinkReadError(@Cast("XLinkError_t") int status, @StdString String stream) { super((Pointer)null); allocate(status, stream); }
    private native void allocate(@Cast("XLinkError_t") int status, @StdString String stream);
}
