// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.onnx;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.onnx.global.onnx.*;


// Registry containing all passes available in ONNX.
@Namespace("onnx::optimization") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.onnx.presets.onnx.class)
public class GlobalPassRegistry extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public GlobalPassRegistry(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public GlobalPassRegistry(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public GlobalPassRegistry position(long position) {
        return (GlobalPassRegistry)super.position(position);
    }

  public native @ByRef StringPassMap passes(); public native GlobalPassRegistry passes(StringPassMap setter);

  public GlobalPassRegistry() { super((Pointer)null); allocate(); }
  private native void allocate();

  public native @SharedPtr @ByVal Pass find(@StdString BytePointer pass_name);
  public native @SharedPtr @ByVal Pass find(@StdString String pass_name);
  public native @Const @ByVal StringVector GetAvailablePasses();
}
