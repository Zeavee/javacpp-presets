// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.pytorch;

import com.oracle.svm.shadowed.org.bytedeco.pytorch.Allocator;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Function;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Module;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;

import static com.oracle.svm.shadowed.org.bytedeco.pytorch.global.torch.*;


@Namespace("torch::jit") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.pytorch.presets.torch.class)
public class Pickler extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public Pickler(Pointer p) { super(p); }

  public Pickler(@ByVal Writer writer) { super((Pointer)null); allocate(writer); }
  private native void allocate(@ByVal Writer writer);

  // NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)
  public Pickler(
        @ByVal Writer writer,
        TensorVector tensor_table,
        @ByVal TypeRenamer type_renamer,
        ClassTypeVector memoized_class_types,
        @ByVal(nullValue = "std::function<std::string(const at::Tensor&)>(nullptr)") TensorIdGetter get_tensor_id) { super((Pointer)null); allocate(writer, tensor_table, type_renamer, memoized_class_types, get_tensor_id); }
  private native void allocate(
        @ByVal Writer writer,
        TensorVector tensor_table,
        @ByVal TypeRenamer type_renamer,
        ClassTypeVector memoized_class_types,
        @ByVal(nullValue = "std::function<std::string(const at::Tensor&)>(nullptr)") TensorIdGetter get_tensor_id);
  public Pickler(
        @ByVal Writer writer,
        TensorVector tensor_table,
        @ByVal TypeRenamer type_renamer,
        ClassTypeVector memoized_class_types) { super((Pointer)null); allocate(writer, tensor_table, type_renamer, memoized_class_types); }
  private native void allocate(
        @ByVal Writer writer,
        TensorVector tensor_table,
        @ByVal TypeRenamer type_renamer,
        ClassTypeVector memoized_class_types);
  // NOLINTNEXTLINE(bugprone-exception-escape)

  // Push protocol onto the stack
  public native void protocol();

  // Push STOP PickleOpCode onto the stack
  public native void stop();

  public native void pushIValue(@Const @ByRef IValue ivalue);

  public native void startTuple();
  public native void endTuple();

  public native @Cast({"", "std::vector<at::Tensor>"}) @StdMove TensorVector tensorData();

  
  public native void pushDict(@Const @ByRef IValue ivalue);
  public native void pushInt(@Cast("int64_t") long value);
  public native void pushLong(@StdString BytePointer data);
  public native void pushLong(@StdString String data);
}
