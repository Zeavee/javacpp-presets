// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.pytorch;

import com.oracle.svm.shadowed.org.bytedeco.pytorch.Allocator;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Function;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Module;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;

import static com.oracle.svm.shadowed.org.bytedeco.pytorch.global.torch.*;


@Namespace("torch::jit") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.pytorch.presets.torch.class)
public class PythonPrint extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PythonPrint(Pointer p) { super(p); }

  public PythonPrint(
        @ByRef IValueVector constant_table,
        @ByRef PrintDepsTable deps_table,
        @ByVal(nullValue = "c10::TypePrinter(nullptr)") @Cast("c10::TypePrinter*") Pointer type_printer,
        @Cast("bool") boolean enforce_importable/*=false*/) { super((Pointer)null); allocate(constant_table, deps_table, type_printer, enforce_importable); }
  private native void allocate(
        @ByRef IValueVector constant_table,
        @ByRef PrintDepsTable deps_table,
        @ByVal(nullValue = "c10::TypePrinter(nullptr)") @Cast("c10::TypePrinter*") Pointer type_printer,
        @Cast("bool") boolean enforce_importable/*=false*/);
  public PythonPrint(
        @ByRef IValueVector constant_table,
        @ByRef PrintDepsTable deps_table) { super((Pointer)null); allocate(constant_table, deps_table); }
  private native void allocate(
        @ByRef IValueVector constant_table,
        @ByRef PrintDepsTable deps_table);

  public native void printNamedType(@Const @SharedPtr @ByRef NamedType classType);
  public native void printFunction(@Const @ByRef Function callee);
  public native void printMethod(@Const @ByRef Function callee);

  public native @StdString BytePointer str();
  public native @StdVector TaggedRange ranges();
  public native @Cast("uint64_t") long minVersion();
}
