// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.pytorch;

import com.oracle.svm.shadowed.org.bytedeco.pytorch.Allocator;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Function;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Module;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;

import static com.oracle.svm.shadowed.org.bytedeco.pytorch.global.torch.*;


/** Options to configure a {@code DataLoader}. */
@Namespace("torch::data") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.pytorch.presets.torch.class)
public class DataLoaderOptions extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public DataLoaderOptions(Pointer p) { super(p); }

  public DataLoaderOptions() { super((Pointer)null); allocate(); }
  private native void allocate();
  /* implicit */ public DataLoaderOptions(@Cast("size_t") long batch_size) { super((Pointer)null); allocate(batch_size); }
private native void allocate(@Cast("size_t") long batch_size);
  public native @Cast("size_t*") @ByRef @NoException(true) SizeTPointer batch_size();
  public native @Cast("size_t*") @ByRef @NoException(true) SizeTPointer workers();
  public native @ByRef @NoException(true) SizeTOptional max_jobs();
  public native @Cast("c10::optional<std::chrono::milliseconds>*") @ByRef @NoException(true) Pointer timeout();
  public native @Cast("bool*") @ByRef @NoException(true) BoolPointer enforce_ordering();
  public native @Cast("bool*") @ByRef @NoException(true) BoolPointer drop_last();
}
