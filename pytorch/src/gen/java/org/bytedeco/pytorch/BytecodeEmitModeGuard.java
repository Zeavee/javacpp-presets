// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.pytorch;

import com.oracle.svm.shadowed.org.bytedeco.pytorch.Allocator;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Function;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Module;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;

import static com.oracle.svm.shadowed.org.bytedeco.pytorch.global.torch.*;


// RAII guard to switch the way JIT emits the bytecode for inputs.
// default_value_for_unspecified_arg:
// true: instruction of default argument values (like LOADC) is emitted.
// false: instruction of default argument values are not emitted. Instead
// they are fetched from operator schema.
// default_args_before_out_args (to forward compatibile support
// operators allowing out arguments and default arguments):
// true: the number of specified arguments will deserialized to (#all_args -
// #default_args). false: the number of specified arguments will deserialized to
// (#all_args).
@Namespace("torch::jit") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.pytorch.presets.torch.class)
public class BytecodeEmitModeGuard extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public BytecodeEmitModeGuard(Pointer p) { super(p); }

  public BytecodeEmitModeGuard(
        @Cast("bool") boolean enable_default_value_for_unspecified_arg,
        @Cast("bool") boolean enable_default_args_before_out_args) { super((Pointer)null); allocate(enable_default_value_for_unspecified_arg, enable_default_args_before_out_args); }
  private native void allocate(
        @Cast("bool") boolean enable_default_value_for_unspecified_arg,
        @Cast("bool") boolean enable_default_args_before_out_args);
  public native @Cast("bool") boolean prev_default_value_for_unspecified_arg_mode(); public native BytecodeEmitModeGuard prev_default_value_for_unspecified_arg_mode(boolean setter);
  public native @Cast("bool") boolean prev_default_args_before_out_args(); public native BytecodeEmitModeGuard prev_default_args_before_out_args(boolean setter);
}
