// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.pytorch;

import com.oracle.svm.shadowed.org.bytedeco.pytorch.Allocator;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Function;
import com.oracle.svm.shadowed.org.bytedeco.pytorch.Module;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;

import static com.oracle.svm.shadowed.org.bytedeco.pytorch.global.torch.*;


/** Options for {@code torch::nn::functional::interpolate}.
 * 
 *  Example:
 *  <pre>{@code
 *  namespace F = torch::nn::functional;
 *  F::interpolate(input, F::InterpolateFuncOptions().size(std::vector<int64_t>({4})).mode(torch::kNearest));
 *  }</pre> */
@Namespace("torch::nn::functional") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.pytorch.presets.torch.class)
public class InterpolateFuncOptions extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public InterpolateFuncOptions() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public InterpolateFuncOptions(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public InterpolateFuncOptions(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public InterpolateFuncOptions position(long position) {
        return (InterpolateFuncOptions)super.position(position);
    }
    @Override public InterpolateFuncOptions getPointer(long i) {
        return new InterpolateFuncOptions((Pointer)this).offsetAddress(i);
    }

  public native @ByRef @NoException(true) LongVectorOptional size();
  public native @ByRef @NoException(true) DoubleVectorOptional scale_factor();
  public native @ByRef @NoException(true) interpolate_mode_t mode();
  public native @ByRef @NoException(true) BoolOptional align_corners();
  public native @ByRef @NoException(true) BoolOptional recompute_scale_factor();
}
