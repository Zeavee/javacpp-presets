// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.ffmpeg.avcodec;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.ffmpeg.avutil.*;
import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.avutil.*;
import com.oracle.svm.shadowed.org.bytedeco.ffmpeg.swresample.*;
import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.swresample.*;

import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.avcodec.*;
 //DEPRECATED

@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.ffmpeg.presets.avcodec.class)
public class AVPacketSideData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public AVPacketSideData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public AVPacketSideData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AVPacketSideData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public AVPacketSideData position(long position) {
        return (AVPacketSideData)super.position(position);
    }
    @Override public AVPacketSideData getPointer(long i) {
        return new AVPacketSideData((Pointer)this).offsetAddress(i);
    }

    public native @Cast("uint8_t*") BytePointer data(); public native AVPacketSideData data(BytePointer setter);
    public native @Cast("size_t") long size(); public native AVPacketSideData size(long setter);
    public native @Cast("AVPacketSideDataType") int type(); public native AVPacketSideData type(int setter);
}
