// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.ffmpeg.avfilter;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import com.oracle.svm.shadowed.org.bytedeco.ffmpeg.avutil.*;
import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.avutil.*;
import com.oracle.svm.shadowed.org.bytedeco.ffmpeg.swresample.*;
import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.swresample.*;
import com.oracle.svm.shadowed.org.bytedeco.ffmpeg.avcodec.*;
import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.avcodec.*;
import com.oracle.svm.shadowed.org.bytedeco.ffmpeg.avformat.*;
import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.avformat.*;
import com.oracle.svm.shadowed.org.bytedeco.ffmpeg.postproc.*;
import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.postproc.*;
import com.oracle.svm.shadowed.org.bytedeco.ffmpeg.swscale.*;
import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.swscale.*;

import static com.oracle.svm.shadowed.org.bytedeco.ffmpeg.global.avfilter.*;


/**
 * A function pointer passed to the \ref AVFilterGraph.execute callback to be
 * executed multiple times, possibly in parallel.
 *
 * @param ctx the filter context the job belongs to
 * @param arg an opaque parameter passed through from \ref
 *            AVFilterGraph.execute
 * @param jobnr the index of the job being executed
 * @param nb_jobs the total number of jobs
 *
 * @return 0 on success, a negative AVERROR on error
 */
@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.ffmpeg.presets.avfilter.class)
public class avfilter_action_func extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    avfilter_action_func(Pointer p) { super(p); }
    protected avfilter_action_func() { allocate(); }
    private native void allocate();
    public native int call(AVFilterContext ctx, Pointer arg, int jobnr, int nb_jobs);
}
