// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.flycapture.FlyCapture2_C;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.flycapture.FlyCapture2.*;
import static com.oracle.svm.shadowed.org.bytedeco.flycapture.global.FlyCapture2.*;

import static com.oracle.svm.shadowed.org.bytedeco.flycapture.global.FlyCapture2_C.*;


    /** Options for saving JPEG2000 image. */
    @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.flycapture.presets.FlyCapture2_C.class)
public class fc2JPG2Option extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public fc2JPG2Option() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public fc2JPG2Option(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public fc2JPG2Option(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public fc2JPG2Option position(long position) {
            return (fc2JPG2Option)super.position(position);
        }
        @Override public fc2JPG2Option getPointer(long i) {
            return new fc2JPG2Option((Pointer)this).offsetAddress(i);
        }
    
        /** JPEG saving quality in range (1-512). */
        public native @Cast("unsigned int") int quality(); public native fc2JPG2Option quality(int setter);
        /** Reserved for future use. */
        public native @Cast("unsigned int") int reserved(int i); public native fc2JPG2Option reserved(int i, int setter);
        @MemberGetter public native @Cast("unsigned int*") IntPointer reserved();
    }
