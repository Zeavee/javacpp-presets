// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.mkldnn;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import static com.oracle.svm.shadowed.org.bytedeco.mkldnn.global.mklml.*;

import static com.oracle.svm.shadowed.org.bytedeco.mkldnn.global.mkldnn.*;


/** A wrapper structure to specify a particular output of a primitive. */
@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.mkldnn.presets.mkldnn.class)
public class mkldnn_primitive_at_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public mkldnn_primitive_at_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public mkldnn_primitive_at_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public mkldnn_primitive_at_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public mkldnn_primitive_at_t position(long position) {
        return (mkldnn_primitive_at_t)super.position(position);
    }
    @Override public mkldnn_primitive_at_t getPointer(long i) {
        return new mkldnn_primitive_at_t((Pointer)this).offsetAddress(i);
    }

    /** Primitive to specify the output for. */
    public native @Const mkldnn_primitive primitive(); public native mkldnn_primitive_at_t primitive(mkldnn_primitive setter);
    /** Desired output index. */
    public native @Cast("size_t") long output_index(); public native mkldnn_primitive_at_t output_index(long setter);
}
