// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tesseract;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.leptonica.*;
import static com.oracle.svm.shadowed.org.bytedeco.leptonica.global.lept.*;

import static com.oracle.svm.shadowed.org.bytedeco.tesseract.global.tesseract.*;


@Namespace("tesseract") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tesseract.presets.tesseract.class)
public class OSBestResult extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public OSBestResult(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public OSBestResult(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public OSBestResult position(long position) {
        return (OSBestResult)super.position(position);
    }
    @Override public OSBestResult getPointer(long i) {
        return new OSBestResult((Pointer)this).offsetAddress(i);
    }

  public OSBestResult() { super((Pointer)null); allocate(); }
  private native void allocate();
  public native int orientation_id(); public native OSBestResult orientation_id(int setter);
  public native int script_id(); public native OSBestResult script_id(int setter);
  public native float sconfidence(); public native OSBestResult sconfidence(float setter);
  public native float oconfidence(); public native OSBestResult oconfidence(float setter);
}
