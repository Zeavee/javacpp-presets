// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tensorflow;

import com.oracle.svm.shadowed.org.bytedeco.tensorflow.Allocator;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.tensorflow.global.tensorflow.*;


// Struct used to allow functions to take DimensionHandle or a dimension value.
// Not meant to be constructed directly.
@Namespace("tensorflow::shape_inference") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tensorflow.presets.tensorflow.class)
public class DimensionOrConstant extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public DimensionOrConstant(Pointer p) { super(p); }

  // Intentionally not explicit.
  public DimensionOrConstant(@ByVal DimensionHandle dim) { super((Pointer)null); allocate(dim); }
  private native void allocate(@ByVal DimensionHandle dim);

  // val must be non-negative or InferenceContext::kUnknownDim.
  public DimensionOrConstant(@Cast("tensorflow::int64") long val) { super((Pointer)null); allocate(val); }
  private native void allocate(@Cast("tensorflow::int64") long val);

  // dim takes precedence. If dim != nullptr, val is ignored.
  public native @ByRef DimensionHandle dim(); public native DimensionOrConstant dim(DimensionHandle setter);
  public native @Cast("tensorflow::int64") long val(); public native DimensionOrConstant val(long setter);
}
