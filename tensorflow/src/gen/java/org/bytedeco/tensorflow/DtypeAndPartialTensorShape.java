// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tensorflow;

import com.oracle.svm.shadowed.org.bytedeco.tensorflow.Allocator;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.tensorflow.global.tensorflow.*;


// A convenient struct to represent a (DataType, PartialTensorShape) pair. It's
// often used in shape inference.
@Namespace("tensorflow") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tensorflow.presets.tensorflow.class)
public class DtypeAndPartialTensorShape extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public DtypeAndPartialTensorShape() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public DtypeAndPartialTensorShape(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public DtypeAndPartialTensorShape(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public DtypeAndPartialTensorShape position(long position) {
        return (DtypeAndPartialTensorShape)super.position(position);
    }

  public native @Cast("tensorflow::DataType") int dtype(); public native DtypeAndPartialTensorShape dtype(int setter);
  public native @ByRef PartialTensorShape shape(); public native DtypeAndPartialTensorShape shape(PartialTensorShape setter);
}
