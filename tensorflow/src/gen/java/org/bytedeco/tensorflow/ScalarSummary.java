// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tensorflow;

import com.oracle.svm.shadowed.org.bytedeco.tensorflow.Allocator;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.tensorflow.global.tensorflow.*;


/** Outputs a {@code Summary} protocol buffer with scalar values.
 * 
 *  The input {@code tags} and {@code values} must have the same shape.  The generated summary
 *  has a summary value for each tag-value pair in {@code tags} and {@code values}.
 * 
 *  Arguments:
 *  * scope: A Scope object
 *  * tags: Tags for the summary.
 *  * values: Same shape as {@code tags.  Values for the summary.
 * 
 *  Returns:
 *  * }Output{@code : Scalar.  Serialized }Summary{@code  protocol buffer. */
@Namespace("tensorflow::ops") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tensorflow.presets.tensorflow.class)
public class ScalarSummary extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ScalarSummary(Pointer p) { super(p); }

  public ScalarSummary(@Const @ByRef Scope scope, @ByVal Input tags,
                @ByVal Input values) { super((Pointer)null); allocate(scope, tags, values); }
  private native void allocate(@Const @ByRef Scope scope, @ByVal Input tags,
                @ByVal Input values);
  public native @ByVal @Name("operator tensorflow::Output") Output asOutput();
  public native @ByVal @Name("operator tensorflow::Input") Input asInput();
  public native Node node();

  public native @ByRef Operation operation(); public native ScalarSummary operation(Operation setter);
  public native @ByRef Output summary(); public native ScalarSummary summary(Output setter);
}
