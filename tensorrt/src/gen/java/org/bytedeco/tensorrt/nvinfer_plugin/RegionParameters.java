// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tensorrt.nvinfer_plugin;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import com.oracle.svm.shadowed.org.bytedeco.cuda.cudart.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cudart.*;
import com.oracle.svm.shadowed.org.bytedeco.tensorrt.nvinfer.*;
import static com.oracle.svm.shadowed.org.bytedeco.tensorrt.global.nvinfer.*;

import static com.oracle.svm.shadowed.org.bytedeco.tensorrt.global.nvinfer_plugin.*;
 // softmax tree

@Namespace("nvinfer1::plugin") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tensorrt.presets.nvinfer_plugin.class)
public class RegionParameters extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public RegionParameters() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public RegionParameters(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public RegionParameters(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public RegionParameters position(long position) {
        return (RegionParameters)super.position(position);
    }

    public native int num(); public native RegionParameters num(int setter);
    public native int coords(); public native RegionParameters coords(int setter);
    public native int classes(); public native RegionParameters classes(int setter);
    public native softmaxTree smTree(); public native RegionParameters smTree(softmaxTree setter);
}
