// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.cuda.cudart.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cudart.*;
import com.oracle.svm.shadowed.org.bytedeco.cuda.cublas.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cublas.*;
import com.oracle.svm.shadowed.org.bytedeco.cuda.cudnn.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cudnn.*;
import com.oracle.svm.shadowed.org.bytedeco.cuda.nvrtc.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.nvrtc.*;

import static com.oracle.svm.shadowed.org.bytedeco.tensorrt.global.nvinfer.*;

@Namespace("nvinfer1::apiv") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tensorrt.presets.nvinfer.class)
public class VLayer extends VRoot {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public VLayer(Pointer p) { super(p); }

    public native @NoException(true) LayerType getType();
    public native @NoException(true) void setName(String name);
    public native @NoException(true) void setName(@Cast("const char*") BytePointer name);
    public native @NoException(true) String getName();
    public native @NoException(true) int getNbInputs();
    public native @NoException(true) ITensor getInput(int index);
    public native @NoException(true) int getNbOutputs();
    public native @NoException(true) ITensor getOutput(int index);
    public native @NoException(true) void setInput(int index, @ByRef ITensor tensor);
    public native @NoException(true) void setPrecision(DataType dataType);
    public native @NoException(true) void setPrecision(@Cast("nvinfer1::DataType") int dataType);
    public native @NoException(true) DataType getPrecision();
    public native @Cast("bool") @NoException(true) boolean precisionIsSet();
    public native @NoException(true) void resetPrecision();
    public native @NoException(true) void setOutputType(int index, DataType dataType);
    public native @NoException(true) void setOutputType(int index, @Cast("nvinfer1::DataType") int dataType);
    public native @NoException(true) DataType getOutputType(int index);
    public native @Cast("bool") @NoException(true) boolean outputTypeIsSet(int index);
    public native @NoException(true) void resetOutputType(int index);
}
