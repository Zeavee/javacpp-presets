// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.cuda.cudart.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cudart.*;
import com.oracle.svm.shadowed.org.bytedeco.cuda.cublas.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cublas.*;
import com.oracle.svm.shadowed.org.bytedeco.cuda.cudnn.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cudnn.*;
import com.oracle.svm.shadowed.org.bytedeco.cuda.nvrtc.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.nvrtc.*;

import static com.oracle.svm.shadowed.org.bytedeco.tensorrt.global.nvinfer.*;


/** \class IConstantLayer
 * 
 *  \brief Layer that represents a constant value.
 *  \note This layer does not support boolean types.
 * 
 *  \warning Do not inherit from this class, as doing so will break forward-compatibility of the API and ABI.
 *  */
@Namespace("nvinfer1") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tensorrt.presets.nvinfer.class)
public class IConstantLayer extends ILayer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public IConstantLayer(Pointer p) { super(p); }

    /**
     *  \brief Set the weights for the layer.
     * 
     *  If weights.type is DataType::kINT32, the output is a tensor of 32-bit indices.
     *  Otherwise the output is a tensor of real values and the output type will be
     *  follow TensorRT's normal precision rules.
     * 
     *  @see getWeights()
     *  */
    
    
    //!
    //!
    //!
    public native @NoException(true) void setWeights(@ByVal Weights weights);

    /**
     *  \brief Get the weights for the layer.
     * 
     *  @see setWeights
     *  */
    
    
    //!
    //!
    //!
    //!
    public native @ByVal @NoException(true) Weights getWeights();

    /**
     *  \brief Set the dimensions for the layer.
     * 
     *  @param dimensions The dimensions of the layer
     * 
     *  @see setDimensions
     *  */
    
    
    //!
    //!
    //!
    //!
    public native @NoException(true) void setDimensions(@ByVal @Cast("nvinfer1::Dims*") Dims32 dimensions);

    /**
     *  \brief Get the dimensions for the layer.
     * 
     *  @return the dimensions for the layer
     * 
     *  @see getDimensions
     *  */
    public native @ByVal @Cast("nvinfer1::Dims*") @NoException(true) Dims32 getDimensions();
}
