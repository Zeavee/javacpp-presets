// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import com.oracle.svm.shadowed.org.bytedeco.cuda.cudart.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cudart.*;

import static com.oracle.svm.shadowed.org.bytedeco.tensorrt.global.nvinfer.*;


/**
 *  \class DimsExprs
 * 
 *  Analog of class Dims with expressions instead of constants for the dimensions.
 *  */
@Namespace("nvinfer1") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tensorrt.presets.nvinfer.class)
public class DimsExprs extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public DimsExprs() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public DimsExprs(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public DimsExprs(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public DimsExprs position(long position) {
        return (DimsExprs)super.position(position);
    }

    /** The number of dimensions. */
    public native int nbDims(); public native DimsExprs nbDims(int setter);
    /** The extent of each dimension. */
    public native @Const IDimensionExpr d(int i); public native DimsExprs d(int i, IDimensionExpr setter);
    @MemberGetter public native @Cast("const nvinfer1::IDimensionExpr**") PointerPointer d();
}
