// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.tensorrt.nvparsers;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import com.oracle.svm.shadowed.org.bytedeco.cuda.cudart.*;
import static com.oracle.svm.shadowed.org.bytedeco.cuda.global.cudart.*;
import com.oracle.svm.shadowed.org.bytedeco.tensorrt.nvinfer.*;
import static com.oracle.svm.shadowed.org.bytedeco.tensorrt.global.nvinfer.*;

import static com.oracle.svm.shadowed.org.bytedeco.tensorrt.global.nvparsers.*;


@Namespace("nvuffparser") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.tensorrt.presets.nvparsers.class)
public class FieldCollection extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public FieldCollection() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public FieldCollection(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FieldCollection(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public FieldCollection position(long position) {
        return (FieldCollection)super.position(position);
    }

    public native int nbFields(); public native FieldCollection nbFields(int setter);
    public native @Const FieldMap fields(); public native FieldCollection fields(FieldMap setter);
}
