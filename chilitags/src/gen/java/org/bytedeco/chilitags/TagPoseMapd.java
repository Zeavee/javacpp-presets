// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.chilitags;

import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.Index;
import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_core.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_core.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_imgproc.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_imgproc.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_imgcodecs.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_videoio.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_videoio.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_highgui.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_highgui.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_flann.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_flann.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_features2d.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_features2d.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_calib3d.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_calib3d.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_video.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_video.*;

import static com.oracle.svm.shadowed.org.bytedeco.chilitags.global.chilitags.*;

@Name("std::map<std::string,chilitags::Chilitags3D_<double>::TransformMatrix>") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.chilitags.presets.chilitags.class)
public class TagPoseMapd extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TagPoseMapd(Pointer p) { super(p); }
    public TagPoseMapd()       { allocate();  }
    private native void allocate();
    public native @Name("operator=") @ByRef TagPoseMapd put(@ByRef TagPoseMapd x);

    public boolean empty() { return size() == 0; }
    public native long size();

    @Index public native @ByRef @Cast("chilitags::Chilitags3D_<double>::TransformMatrix*") DoublePointer get(@StdString BytePointer i);
    public native TagPoseMapd put(@StdString BytePointer i, DoublePointer value);

    public native @ByVal Iterator begin();
    public native @ByVal Iterator end();
    @NoOffset @Name("iterator") public static class Iterator extends Pointer {
        public Iterator(Pointer p) { super(p); }
        public Iterator() { }

        public native @Name("operator++") @ByRef Iterator increment();
        public native @Name("operator==") boolean equals(@ByRef Iterator it);
        public native @Name("operator*().first") @MemberGetter @StdString BytePointer first();
        public native @Name("operator*().second") @MemberGetter @ByRef @Cast("chilitags::Chilitags3D_<double>::TransformMatrix*") @Const DoublePointer second();
    }
}

