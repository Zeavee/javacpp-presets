// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.leptonica;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.leptonica.global.lept.*;


/** Timing struct */
@Name("L_WallTimer") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.leptonica.presets.lept.class)
public class L_WALLTIMER extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public L_WALLTIMER() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public L_WALLTIMER(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public L_WALLTIMER(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public L_WALLTIMER position(long position) {
        return (L_WALLTIMER)super.position(position);
    }

    public native @Cast("l_int32") int start_sec(); public native L_WALLTIMER start_sec(int setter);
    public native @Cast("l_int32") int start_usec(); public native L_WALLTIMER start_usec(int setter);
    public native @Cast("l_int32") int stop_sec(); public native L_WALLTIMER stop_sec(int setter);
    public native @Cast("l_int32") int stop_usec(); public native L_WALLTIMER stop_usec(int setter);
}
