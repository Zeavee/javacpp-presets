// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.caffe;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_core.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_core.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_imgproc.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_imgproc.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_imgcodecs.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_videoio.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_videoio.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_highgui.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_highgui.*;
import com.oracle.svm.shadowed.org.bytedeco.hdf5.*;
import static com.oracle.svm.shadowed.org.bytedeco.hdf5.global.hdf5.*;

import static com.oracle.svm.shadowed.org.bytedeco.caffe.global.caffe.*;


@Namespace("caffe::db") @NoOffset @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.caffe.presets.caffe.class)
public class LMDBCursor extends Cursor {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public LMDBCursor(Pointer p) { super(p); }

  public LMDBCursor(@Cast("MDB_txn*") Pointer mdb_txn, @Cast("MDB_cursor*") Pointer mdb_cursor) { super((Pointer)null); allocate(mdb_txn, mdb_cursor); }
  private native void allocate(@Cast("MDB_txn*") Pointer mdb_txn, @Cast("MDB_cursor*") Pointer mdb_cursor);
  public native void SeekToFirst();
  public native void Next();
  public native @StdString BytePointer key();
  public native @StdString BytePointer value();
  public native @Cast("bool") boolean valid();
}
