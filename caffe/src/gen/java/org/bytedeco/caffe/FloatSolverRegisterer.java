// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.caffe;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas_nolapack.*;
import static com.oracle.svm.shadowed.org.bytedeco.openblas.global.openblas.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_core.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_core.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_imgproc.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_imgproc.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_imgcodecs.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_videoio.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_videoio.*;
import com.oracle.svm.shadowed.org.bytedeco.opencv.opencv_highgui.*;
import static com.oracle.svm.shadowed.org.bytedeco.opencv.global.opencv_highgui.*;
import com.oracle.svm.shadowed.org.bytedeco.hdf5.*;
import static com.oracle.svm.shadowed.org.bytedeco.hdf5.global.hdf5.*;

import static com.oracle.svm.shadowed.org.bytedeco.caffe.global.caffe.*;



@Name("caffe::SolverRegisterer<float>") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.caffe.presets.caffe.class)
public class FloatSolverRegisterer extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FloatSolverRegisterer(Pointer p) { super(p); }

  public static class Creator_SolverParameter extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    Creator_SolverParameter(Pointer p) { super(p); }
      protected Creator_SolverParameter() { allocate(); }
      private native void allocate();
      public native FloatSolver call(@Const @ByRef SolverParameter arg0);
  }
  public FloatSolverRegisterer(@StdString BytePointer type,
        Creator_SolverParameter creator) { super((Pointer)null); allocate(type, creator); }
  private native void allocate(@StdString BytePointer type,
        Creator_SolverParameter creator);
  public FloatSolverRegisterer(@StdString String type,
        Creator_SolverParameter creator) { super((Pointer)null); allocate(type, creator); }
  private native void allocate(@StdString String type,
        Creator_SolverParameter creator);
}
