// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.librealsense2;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.librealsense2.global.realsense2.*;


@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.librealsense2.presets.realsense2.class)
public class STRauColorThresholdsControl extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public STRauColorThresholdsControl() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public STRauColorThresholdsControl(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public STRauColorThresholdsControl(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public STRauColorThresholdsControl position(long position) {
        return (STRauColorThresholdsControl)super.position(position);
    }
    @Override public STRauColorThresholdsControl getPointer(long i) {
        return new STRauColorThresholdsControl((Pointer)this).offsetAddress(i);
    }

    public native @Cast("uint32_t") int rauDiffThresholdRed(); public native STRauColorThresholdsControl rauDiffThresholdRed(int setter);
    public native @Cast("uint32_t") int rauDiffThresholdGreen(); public native STRauColorThresholdsControl rauDiffThresholdGreen(int setter);
    public native @Cast("uint32_t") int rauDiffThresholdBlue(); public native STRauColorThresholdsControl rauDiffThresholdBlue(int setter);
}
