// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.libfreenect2;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.libfreenect2.global.freenect2.*;


/** Pipeline with CPU depth processing. */
@Namespace("libfreenect2") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.libfreenect2.presets.freenect2.class)
public class CpuPacketPipeline extends PacketPipeline {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CpuPacketPipeline(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CpuPacketPipeline(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public CpuPacketPipeline position(long position) {
        return (CpuPacketPipeline)super.position(position);
    }
    @Override public CpuPacketPipeline getPointer(long i) {
        return new CpuPacketPipeline((Pointer)this).offsetAddress(i);
    }

  public CpuPacketPipeline() { super((Pointer)null); allocate(); }
  private native void allocate();
}
