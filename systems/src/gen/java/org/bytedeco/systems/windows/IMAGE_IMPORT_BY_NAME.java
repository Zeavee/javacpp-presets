// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.systems.windows;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.systems.global.windows.*;


//
// Import Format
//

@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.systems.presets.windows.class)
public class IMAGE_IMPORT_BY_NAME extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public IMAGE_IMPORT_BY_NAME() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public IMAGE_IMPORT_BY_NAME(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public IMAGE_IMPORT_BY_NAME(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public IMAGE_IMPORT_BY_NAME position(long position) {
        return (IMAGE_IMPORT_BY_NAME)super.position(position);
    }
    @Override public IMAGE_IMPORT_BY_NAME getPointer(long i) {
        return new IMAGE_IMPORT_BY_NAME((Pointer)this).offsetAddress(i);
    }

    public native @Cast("WORD") short Hint(); public native IMAGE_IMPORT_BY_NAME Hint(short setter);
    public native @Cast("CHAR") byte Name(int i); public native IMAGE_IMPORT_BY_NAME Name(int i, byte setter);
    @MemberGetter public native @Cast("CHAR*") BytePointer Name();
}
