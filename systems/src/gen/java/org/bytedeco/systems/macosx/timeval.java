// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.systems.macosx;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.systems.global.macosx.*;
 /* __darwin_suseconds_t */

@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.systems.presets.macosx.class)
public class timeval extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public timeval() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public timeval(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public timeval(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public timeval position(long position) {
        return (timeval)super.position(position);
    }
    @Override public timeval getPointer(long i) {
        return new timeval((Pointer)this).offsetAddress(i);
    }

	public native @Cast("__darwin_time_t") long tv_sec(); public native timeval tv_sec(long setter);         /* seconds */
	public native @Cast("__darwin_suseconds_t") int tv_usec(); public native timeval tv_usec(int setter);        /* and microseconds */
}
