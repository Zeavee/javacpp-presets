// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.systems.macosx;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.systems.global.macosx.*;

// #endif

/*
 * Structure filled in by dladdr().
 */
@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.systems.presets.macosx.class)
public class Dl_info extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public Dl_info() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public Dl_info(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public Dl_info(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public Dl_info position(long position) {
        return (Dl_info)super.position(position);
    }
    @Override public Dl_info getPointer(long i) {
        return new Dl_info((Pointer)this).offsetAddress(i);
    }

        public native @Cast("const char*") BytePointer dli_fname(); public native Dl_info dli_fname(BytePointer setter);     /* Pathname of shared object */
        public native Pointer dli_fbase(); public native Dl_info dli_fbase(Pointer setter);     /* Base address of shared object */
        public native @Cast("const char*") BytePointer dli_sname(); public native Dl_info dli_sname(BytePointer setter);     /* Name of nearest symbol */
        public native Pointer dli_saddr(); public native Dl_info dli_saddr(Pointer setter);     /* Address of nearest symbol */
}
