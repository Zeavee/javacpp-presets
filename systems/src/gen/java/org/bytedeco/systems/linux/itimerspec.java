// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.systems.linux;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.systems.global.linux.*;

// #if defined __USE_XOPEN || defined __USE_POSIX || defined __USE_MISC
// #endif


// # ifdef __USE_POSIX199309
/* POSIX.1b structure for timer start values and intervals.  */
@Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.systems.presets.linux.class)
public class itimerspec extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public itimerspec() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public itimerspec(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public itimerspec(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public itimerspec position(long position) {
        return (itimerspec)super.position(position);
    }
    @Override public itimerspec getPointer(long i) {
        return new itimerspec((Pointer)this).offsetAddress(i);
    }

    public native @ByRef timespec it_interval(); public native itimerspec it_interval(timespec setter);
    public native @ByRef timespec it_value(); public native itimerspec it_value(timespec setter);
  }
