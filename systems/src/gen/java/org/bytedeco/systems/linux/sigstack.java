// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.oracle.svm.shadowed.org.bytedeco.systems.linux;

import java.nio.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.*;
import com.oracle.svm.shadowed.org.bytedeco.javacpp.annotation.*;

import static com.oracle.svm.shadowed.org.bytedeco.javacpp.presets.javacpp.*;

import static com.oracle.svm.shadowed.org.bytedeco.systems.global.linux.*;

// #endif


/* Structure describing a signal stack (obsolete).  */
@Name("struct sigstack") @Properties(inherit = com.oracle.svm.shadowed.org.bytedeco.systems.presets.linux.class)
public class sigstack extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public sigstack() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public sigstack(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public sigstack(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public sigstack position(long position) {
        return (sigstack)super.position(position);
    }
    @Override public sigstack getPointer(long i) {
        return new sigstack((Pointer)this).offsetAddress(i);
    }

    public native Pointer ss_sp(); public native sigstack ss_sp(Pointer setter);		/* Signal stack pointer.  */
    public native int ss_onstack(); public native sigstack ss_onstack(int setter);		/* Nonzero if executing on this stack.  */
  }
